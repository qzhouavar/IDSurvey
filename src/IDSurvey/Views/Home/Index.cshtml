@model RateViewModel

@{ 
    ViewData["Title"] = "Reporting Dashboard";
}

<script src="~/lib/amcharts_3.20.17.free/amcharts/amcharts.js"></script>
<script src="https://www.amcharts.com/lib/3/serial.js"></script>
<script src="https://www.amcharts.com/lib/3/plugins/export/export.min.js"></script>
<link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" />
<script src="https://www.amcharts.com/lib/3/themes/light.js"></script>

<div class="row tile_count">
    <div class="col-md-2 col-sm-4 col-xs-6 tile_stats_count">
        <span class="count_top"><i class="fa fa-user"></i> Total</span>
        <div class="count">@ViewData["OverallTotal"]</div>
    </div>
    <div class="col-md-2 col-sm-4 col-xs-6 tile_stats_count">
        <span class="count_top"><i class="fa fa-trophy" aria-hidden="true"></i> Complete</span>
        <div class="count">
            @ViewData["OverallComplete"]
        </div>
    </div>
    <div class="col-md-2 col-sm-4 col-xs-6 tile_stats_count">
        <span class="count_top"><i class="fa fa-pie-chart" aria-hidden="true"></i> Rate</span>
        <div class="count  green">
            @String.Format(
            System.Globalization.CultureInfo.CurrentCulture,
            "{0:0.00}", ViewData["AveRate"]
            )%
        </div>
    </div>
</div>

<script>
    var chartData = generatechartData();
    function generatechartData() {
        var chartData = [];
        @foreach (var item in Model.totalRates) {
            var newDate = item.QTR;
            var rates =item.COMPLETE * 100.0 / item.TOTAL;
            <text>
        chartData.push({quarter: "@newDate",value: @rates});
        </text>

        }
        return chartData;
    }

    var chart = AmCharts.makeChart("chartdivtotal", {
        "type": "serial",
        "theme": "light",
        "marginTop":10,
        "marginRight": 80,
        "dataProvider": chartData,
        "valueAxes": [{
            "minimum":0,
            "maximum":100,
            "axisAlpha": 0,
            "position": "left",
            "unit": "%",
            "guides": [{
                "dashLength": 6,
                "inside": true,
                //"label": "Average",
                "lineAlpha": 1,
                "value": @ViewData["AveRate"],
                "lineColor":"#263138",
                "width": 2
            }],
           
        }],
      
        "graphs": [{
            "balloonColor":"#d1655d",
            "id":"g1",
            "balloonText": "Q[[category]]<br><b><span style='font-size:14px;'>[[value]]%</span></b>",
            "bullet": "round",
            "bulletSize": 8,
            "lineColor": "#d1655d",
            "lineThickness": 2,
            "negativeLineColor": "#67b7dc",
            "valueField": "value",
            "negativeBase":@ViewData["AveRate"],
            "precision":1,
            "labelText": "[[value]]%",
        }],

        //"chartScrollbar": {
        //    "scrollbarHeight": 5,
        //    "backgroundAlpha": 0.1,
        //    "selectedBackgroundAlpha": 1
        //},
        "chartCursor": {
            //"valueLineEnabled": true,
            //"valueLineBalloonEnabled": true
            "categoryBalloonEnabled": false,
            "cursorAlpha": 0,
            "zoomable": false
        },
        "categoryField": "quarter",
        "categoryAxis": {
            "parseDates": false,
            "axisAlpha": 0,
            "minHorizontalGap": 60,
            "gridAlpha": 0,
            "labelFunction": function(valueText, quarter, categoryAxis) {
                return "Q"+valueText;
            }
        },
        "export": {
            "enabled": true,
            "menuReviver": function(config, li) {
                // MODIFY ONLY IMAGE ITEMS
                if (config.capture) {
                    var link = li.getElementsByTagName("a")[0];

                    // ADD ANOTHER CLICK HANDLER ON TOP TO CHANGE THE FILENAME
                    link.addEventListener("click", function(e) {
                        config.fileName = "Overall Response Rate";
                    });
                }

                // RETURN UNTOUCHED LIST ELEMENT
                return li;
            }
        }

    });
   
</script>
<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="dashboard_graph">
            <div class="row x_title">
                <div class="col-md-12">
                    <h3><strong>Overall Response Rate</strong></h3>

                </div>
            </div>
            <div class="col-md-12 col-sm-12 col-xs-12">
             
              
                    <div id="chartdivtotal" class="demo-placeholder" style="height:270px;"></div>
               
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>
<br />

<script>
    var chartData = generatechartData();
    function generatechartData() {
        var chartData = [];
        @foreach (var item in Model.appealsRates) {
            var newDate = item.QTR;
            var rates =item.COMPLETE * 100.0 / item.TOTAL;

                <text>
        chartData.push({quarter: "@newDate",value: @rates});
        </text>

         }
        return chartData;
    }

    var chart = AmCharts.makeChart("chartdivAPPEALS", {
        "type": "serial",
        "theme": "light",
        "marginTop":10,
        "marginRight": 80,
        "dataProvider": chartData,

        "valueAxes": [{
            "minimum":0,
            "maximum":100,
            "axisAlpha": 0,
            "position": "left",
            "unit": "%",
            "guides": [{
                "dashLength": 6,
                "inside": true,
                //"label": "Average",
                "lineAlpha": 1,
                "value": @ViewData["AppealsRate"],
                "lineColor":"#263138",
                "width": 2
            }],
        }],
        "graphs": [{
            "balloonColor":"#d1655d",
            "id":"g1",
            "balloonText": "Q[[category]]<br><b><span style='font-size:14px;'>[[value]]%</span></b>",
            "bullet": "round",
            "bulletSize": 8,
            "lineColor": "#d1655d",
            "lineThickness": 2,
            "negativeLineColor": "#67b7dc",
            "valueField": "value",
            "negativeBase":@ViewData["AppealsRate"] ,
            "precision":1,
            "labelText": "[[value]]%",
        }],
        "chartCursor": {
            "categoryBalloonEnabled": false,
            "cursorAlpha": 0,
            "zoomable": false
        },
        "categoryField": "quarter",
        "categoryAxis": {
            "gridAlpha": 0,
            "parseDates": false,
            "axisAlpha": 0,
            "minHorizontalGap": 60,
            "labelFunction": function(valueText, quarter, categoryAxis) {
                return "Q"+valueText;
            }
        },
        "export": {
            "enabled": true,
            "menuReviver": function(config, li) {
                // MODIFY ONLY IMAGE ITEMS
                if (config.capture) {
                    var link = li.getElementsByTagName("a")[0];

                    // ADD ANOTHER CLICK HANDLER ON TOP TO CHANGE THE FILENAME
                    link.addEventListener("click", function(e) {
                        config.fileName = "Response Rate:Appeal Cases";
                    });
                }

                // RETURN UNTOUCHED LIST ELEMENT
                return li;
            }
        }

    });
   
</script>
<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12" id="hfPosition">
        <div class="dashboard_graph">
            <div class="row x_title">
                <div class="col-md-12">
                    <h3><strong>Response Rate:Appeal Cases</strong></h3>
                </div>
            </div>
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div id="placeholder33" style="height: 260px; display: none" class="demo-placeholder"></div>
                <div class="chart-wrap">
                    <div id="chartdivAPPEALS" class="demo-placeholder" style="width: 100%; height:270px;"></div>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>
<br />

<script>
    var chartData = generatechartData();
    function generatechartData() {
        var chartData = [];
        @foreach (var item in Model.complaintsRates) {
            var newDate = @item.QTR;
            var rates = @item.COMPLETE * 100.0 / @item.TOTAL;
            <text>
                chartData.push({quarter: "@newDate",value: @rates});
            </text>
         }
        return chartData;
    }

    var chart = AmCharts.makeChart("chartdivCOMPLAINTS", {
        "type": "serial",
        "theme": "light",
      
        "dataProvider": chartData,
        "valueAxes": [{
            "minimum":0,
            "maximum":100,
            "axisAlpha": 0,
            "position": "left",
            "unit": "%",
            "guides": [{
                "dashLength": 6,
                "inside": true,
                //"label": "Average",
                "lineAlpha": 1,
                "value": @ViewData["ComplaintsRate"],
                "lineColor":"#263138",
                "width": 2
            }],
        }],

        "graphs": [{
            "balloonColor":"#d1655d",
            "id":"g1",
            "balloonText": "Q[[category]]<br><b><span style='font-size:14px;'>[[value]]%</span></b>",
            "bullet": "round",
            "bulletSize": 8,
            "lineColor": "#d1655d",
            "lineThickness": 2,
            "negativeLineColor": "#67b7dc",
            "valueField": "value",
            "negativeBase":@ViewData["ComplaintsRate"] ,
            "precision":1,
            "labelText": "[[value]]%",
          
        }],
        "chartCursor": {
            "categoryBalloonEnabled": false,
            "cursorAlpha": 0,
            "zoomable": false
        },
        "categoryField": "quarter",
        "categoryAxis": {
            "gridAlpha": 0,
            "parseDates": false,
            "axisAlpha": 0,
            "minHorizontalGap": 60,
            "labelFunction": function(valueText, quarter, categoryAxis) {
                return "Q"+valueText;
            }
        },
        "export": {
            "enabled": true,
            "menuReviver": function(config, li) {
                // MODIFY ONLY IMAGE ITEMS
                if (config.capture) {
                    var link = li.getElementsByTagName("a")[0];

                    // ADD ANOTHER CLICK HANDLER ON TOP TO CHANGE THE FILENAME
                    link.addEventListener("click", function(e) {
                        config.fileName = "Response Rate:Complaint Cases";
                    });
                }

                // RETURN UNTOUCHED LIST ELEMENT
                return li;
            }
        }

    });

</script>
<div class="row page-break-chart">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="dashboard_graph">
            <div class="row x_title">
                <div class="col-md-12">
                    <h3><strong>Response Rate:Complaint Cases</strong></h3>
                </div>
            </div>
            <div class="col-md-12 col-sm-12 col-xs-12">
            
               
                    <div id="chartdivCOMPLAINTS" class="demo-placeholder" style="width: 96%; height:270px;"></div>
               
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>
<br />

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="dashboard_graph" id="created">
            <div class="row x_title">
                <div class="col-md-4">
                    <h3><strong>Response Rate by Service Area</strong></h3>
                </div>
                <div class="col-md-8 hidden-print">
                    <form id="form">
                        <p>
                            <div class="col-md-3">
                                <select asp-for="quarter" @*asp-items="Model.quarters"*@ id="quarterlist" class="form-control">
                                    <option value="">Please select a month</option>
                                    <option value="6">6</option>
                                    <option value="7">7</option>
                                    <option value="8-1">8-1</option>
                                    <option value="8-2">8-2</option>
                                    <option value="8-2">8-2</option>
                                    <option value="9-1">9-1</option>
                                    <option value="9-2">9-2</option>
                                    <option value="9-3">9-3</option>
                                    <option value="10-1">10-1</option>
                                    <option value="10-2">10-2</option>
                                </select>
                            </div>
                            <div class="col-md-9">
                                <button class="btn btn-success btn-round" type="submit" style="display: inline;" id="create" AutoPostBack="true"><i class="fa fa-search" aria-hidden="true"></i> Search</button>
                            </div>
                        </p>
                    </form>
                </div>
            </div>
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="col-md-4 col-sm-6 col-xs-12">

                    <div id="chartdivquarter" style="width: 100%; height:270px;"></div>

                </div>
                <div class="col-md-4 col-sm-6 col-xs-12 ">


                    <div id="chartdivtypeAPPEALS" style="width: 100%; height:270px;"></div>

                </div>
                <div class="col-md-4 col-sm-6 col-xs-12">

                    <div id="chartdivtypeCOMPLAINTS" style="width: 100%; height:270px;"></div>

                </div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>
<br />

<script>
    var chartData = generatechartData();
    function generatechartData() {
        var chartData = [];
        @foreach (var item in Model.quarterRates) {
            var newDate = item.SERVICE_AREA;
            var rates =item.COMPLETE * 100.0 / item.TOTAL;
            <text>
        chartData.push({quarter: "@newDate",value: @rates});
        </text>
        }
        return chartData;
    }
    console.log(chartData);
    var e = document.getElementById("quarterlist");
    var q = e.options[e.selectedIndex].value;
    var t="All Quarters";
    if(q!="") t="Q"+q;
    var chart = AmCharts.makeChart("chartdivquarter", {
        "type": "serial",
        "theme": "light",
        "marginTop":10,
        "marginRight": 80,
        "dataProvider": chartData,
        "titles": [
		{
		    "text":"Response Rate: Total of "+t,
		    "size": 12
		}
        ],

        "valueAxes": [{
            "minimum":0,
            "maximum":100,
            "axisAlpha": 0,
            "position": "left",
            "unit": "%",
            "guides": [{
                "dashLength": 6,
                "inside": true,
                "label": "Average",
                "lineAlpha": 1,
                "lineColor":"#263138",
                "width": 2
            }],
        }],

        "gridAboveGraphs": true,

        "graphs": [ {
            "fillAlphas": 0.8,
            "lineAlpha": 0.2,
            "type": "column",
            "valueField": "value",
            "precision":1,
            "labelText": "[[value]]%",
            "balloonText": "Area[[category]]<br><b><span style='font-size:14px;'>[[value]]%</span></b>",
        } ],
        "chartCursor": {
            "categoryBalloonEnabled": false,
            "cursorAlpha": 0,
            "zoomable": false
        },
        "categoryField":  "quarter",
        "categoryAxis": {
            "gridPosition": "start",
            "gridAlpha": 0,
            "tickPosition": "start",
            "tickLength": 20,
            "labelFunction": function(valueText, quarter, categoryAxis) {
                return "Area"+valueText;
            }
        },
        "export": {
            "enabled": true,
            "menuReviver": function(config, li) {
                // MODIFY ONLY IMAGE ITEMS
                if (config.capture) {
                    var link = li.getElementsByTagName("a")[0];

                    // ADD ANOTHER CLICK HANDLER ON TOP TO CHANGE THE FILENAME
                    link.addEventListener("click", function(e) {
                        config.fileName = "Response Rate by Service Area_Total";
                    });
                }

                // RETURN UNTOUCHED LIST ELEMENT
                return li;
            }
        }

    });
  
</script>

<script>
    var e = document.getElementById("quarterlist");
    var q = e.options[e.selectedIndex].value;
    var t="All Quarters";
    if(q!="") t="Q"+q;
        var chartData = generatechartData();
        function generatechartData() {
            var chartData = [];
            @foreach (var item in Model.typeRates) {
                var newDate = item.SERVICE_AREA;
                var rates = item.COMPLETE != 0 ? (item.COMPLETE * 100.0 / item.TOTAL) : 0;
                 if(item.TYPE.Contains("APPEALS")) {
                    <text>
                    chartData.push({quarter: "@newDate",value: @rates});
                    </text>
                 }
            }
            return chartData;
        }
        var placeholder = [
            {
                quarter: 1,
                value: 0
            },
            {
                quarter: 2,
                value: 0
            },
            {
                quarter: 3,
                value: 0
            },
            {
                quarter: 4,
                value: 0
            },
            {
                quarter: 5,
                value: 0
            },
        ];
        var chart = AmCharts.makeChart("chartdivtypeAPPEALS", {
            "type": "serial",
            "theme": "light",
            "marginTop":10,
            "marginRight": 80,
            "dataProvider": chartData.length > 0 ? chartData : placeholder,
            "titles": [
               {
                   "text":"Response Rate: Appeal Cases of "+t,
                   "size": 12
               }
            ],
            "gridAboveGraphs": true,
            "valueAxes": [{
                "minimum":0,
                "maximum":100,
                "axisAlpha": 0,
                "position": "left",
                "unit": "%",
                "guides": [{
                    "dashLength": 6,
                    "inside": true,
                    "label": "Average",
                    "lineAlpha": 1,

                    "lineColor":"#263138",
                    "width": 2
                }],
            }],
            "graphs": [{
                "fillAlphas": 0.8,
                "lineAlpha": 0.2,
                "type": "column",
                "valueField": "value",
                "precision":1,
                "labelText": "[[value]]%",
                "balloonText": "Area[[category]]<br><b><span style='font-size:14px;'>[[value]]%</span></b>",
            }],
            "chartCursor": {
                "categoryBalloonEnabled": false,
                "cursorAlpha": 0,
                "zoomable": false
            },
            "categoryField": "quarter",
            "categoryAxis": {
                "gridPosition": "start",
                "gridAlpha": 0,
                "tickPosition": "start",
                "tickLength": 20,
                "labelFunction": function(valueText, quarter, categoryAxis) {
                    return "Area"+valueText;
                }
            },
            "export": {
                "enabled": true,
                "menuReviver": function(config, li) {
                    // MODIFY ONLY IMAGE ITEMS
                    if (config.capture) {
                        var link = li.getElementsByTagName("a")[0];

                        // ADD ANOTHER CLICK HANDLER ON TOP TO CHANGE THE FILENAME
                        link.addEventListener("click", function(e) {
                            config.fileName = "Response Rate by Service Area_Appeal Cases";
                        });
                    }
                    return li;
                }
            }

        });
</script>

<script>
        var e = document.getElementById("quarterlist");
        var q = e.options[e.selectedIndex].value;
        var t="All Quarters";
        if(q!="") t="Q"+q;
        var chartData = generatechartData();
        function generatechartData() {
            var chartData = [];
            @foreach (var item in Model.typeRates) {
                var newDate = item.SERVICE_AREA;
                var rates =item.COMPLETE * 100.0 / item.TOTAL;
                 if(item.TYPE.Contains("COMPLAINTS")) {
                    <text>
                    chartData.push({quarter: "@newDate",value: @rates});
                    </text>
                 }
        }
        return chartData;
        }

        var chart = AmCharts.makeChart("chartdivtypeCOMPLAINTS", {
            "type": "serial",
            "theme": "light",
            "marginTop":10,
            "marginRight": 80,
            "dataProvider": chartData,
            "titles": [
                 {
                     "text":"Response Rate: Complaint Cases of "+t,
                     "size": 12
                 }
            ],
            "valueAxes": [{
                "minimum":0,
                "maximum":100,
                "axisAlpha": 0,
                "position": "left",
                "unit": "%",
                "guides": [{
                    "dashLength": 6,
                    "inside": true,
                    "label": "Average",
                    "lineAlpha": 1,

                    "lineColor":"#263138",
                    "width": 2
                }],
            }],
            "graphs": [{
                "fillAlphas": 0.8,
                "lineAlpha": 0.2,
                "type": "column",
                "valueField": "value",
                "precision":1,
                "labelText": "[[value]]%",
                "balloonText": "Area[[category]]<br><b><span style='font-size:14px;'>[[value]]%</span></b>",
            }],

            "chartCursor": {
                "categoryBalloonEnabled": false,
                "cursorAlpha": 0,
                "zoomable": false
            },
            "categoryField": "quarter",
            "categoryAxis": {
                "gridPosition": "start",
                "gridAlpha": 0,
                "tickPosition": "start",
                "tickLength": 20,
                "labelFunction": function(valueText, quarter, categoryAxis) {
                    return "Area"+valueText;
                }
            },
            "export": {
                "enabled": true,
                "menuReviver": function(config, li) {
                    // MODIFY ONLY IMAGE ITEMS
                    if (config.capture) {
                        var link = li.getElementsByTagName("a")[0];

                        // ADD ANOTHER CLICK HANDLER ON TOP TO CHANGE THE FILENAME
                        link.addEventListener("click", function(e) {
                            config.fileName = "Response Rate by Service Area_Complaint Cases";
                        });
                    }

                    // RETURN UNTOUCHED LIST ELEMENT
                    return li;
                }
            }

        });
</script>

<script type="text/javascript" src="~/js/PrintHome.js"></script>